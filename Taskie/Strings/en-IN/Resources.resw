<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutApp.Text" xml:space="preserve">
    <value>Thanks for supporting me. Taskie is one of my first projects, which I poar'd a lot of luv into. You can check out my udher projects on GitHub. I hope you like Taskie. Best wishes from Poland!</value>
  </data>
  <data name="AdvertTag.Text" xml:space="preserve">
    <value>Your quick and privat task compänion.</value>
  </data>
  <data name="AppearanceCategory" xml:space="preserve">
    <value>Apearance</value>
  </data>
  <data name="AppearanceText.Text" xml:space="preserve">
    <value>Apearance</value>
  </data>
  <data name="AppThemeSubText.Text" xml:space="preserve">
    <value>Chainj app theme</value>
  </data>
  <data name="AuthDescription.Text" xml:space="preserve">
    <value>Make the app ask for your passwerd/pin/biomëtrics via Windows Hello. This option may not be available if your computer dusn't have a passwerd or you haven't pürchuss'd Taskie Pro.</value>
  </data>
  <data name="AuthDisabledDescription" xml:space="preserve">
    <value>Remoov'd biomëtrics or passwerd, your ädministrater remoov'd the option, you refünded Taskie Pro or something else happen'd. Check Windows Settings or the Microsoft Store.</value>
  </data>
  <data name="AuthDisabledTitle" xml:space="preserve">
    <value>Authëntication has been turn'd off.</value>
  </data>
  <data name="AuthText.Text" xml:space="preserve">
    <value>Uze authëntication</value>
  </data>
  <data name="BackupText.Text" xml:space="preserve">
    <value>Expört all lists with one click belouw. To expört one list, rite-click it and chooze Expört or uze the three-dot menu after opening it.</value>
  </data>
  <data name="CloseCO.Text" xml:space="preserve">
    <value>Cloze the compact overlay to werk in this windouw.</value>
  </data>
  <data name="ExportButton.Text" xml:space="preserve">
    <value>Expört</value>
  </data>
  <data name="ExportList.Text" xml:space="preserve">
    <value>Expört</value>
  </data>
  <data name="ImportButton.Text" xml:space="preserve">
    <value>Impört</value>
  </data>
  <data name="LightThemeRadio.Content" xml:space="preserve">
    <value>Lite</value>
  </data>
  <data name="ListLimitText.Text" xml:space="preserve">
    <value>Remoov 3 list limit</value>
  </data>
  <data name="PrioritySupportText.Text" xml:space="preserve">
    <value>Pryority settings</value>
  </data>
  <data name="ProCancelled" xml:space="preserve">
    <value>You refünded Pro.</value>
  </data>
  <data name="ProCancelledSub" xml:space="preserve">
    <value>Pro feechers wer block'd.</value>
  </data>
  <data name="PromoBannerText.Text" xml:space="preserve">
    <value>Remoov promotional banners</value>
  </data>
  <data name="protip.Subtitle" xml:space="preserve">
    <value>Upgrade the app with a smaul pürchuss to suppört me and remoov all limits.</value>
  </data>
  <data name="RestartButton.Text" xml:space="preserve">
    <value>Reestärt</value>
  </data>
  <data name="RestartWarning.Text" xml:space="preserve">
    <value>This requires reestärting the app.</value>
  </data>
  <data name="RestoreText.Text" xml:space="preserve">
    <value>Impört one list (*.json) or a full backup (*.taskie) into the app here. If a list exists, it'll be impört'd with a (2) next to its name.</value>
  </data>
  <data name="SearchBox.PlaceholderText" xml:space="preserve">
    <value>Serch</value>
  </data>
  <data name="successfulUpgrade" xml:space="preserve">
    <value>Suxcessfully upgraded!</value>
  </data>
  <data name="SuccessfulUpgradeSub" xml:space="preserve">
    <value>Taskie Pro wos unlock'd.</value>
  </data>
  <data name="SystemThemeRadio.Content" xml:space="preserve">
    <value>Sistem theme</value>
  </data>
  <data name="tip1.Title" xml:space="preserve">
    <value>Let's start!</value>
  </data>
  <data name="tipwrongname.Subtitle" xml:space="preserve">
    <value>A list with this name alleddy exists.</value>
  </data>
  <data name="WindowsDefault" xml:space="preserve">
    <value>Windows deefault</value>
  </data>
</root>